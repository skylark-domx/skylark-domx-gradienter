{"version":3,"sources":["skylark-ui-gradienter.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","hasOwnProperty","Error","module","args","forEach","apply","window","skylarkjs","Drag","obj","gradx","init","o","oRoot","minX","maxX","minY","maxY","bSwapHorzRef","bSwapVertRef","fXMapper","fYMapper","onmousedown","start","hmode","vmode","root","isNaN","parseInt","style","left","right","xMapper","yMapper","onDragStart","Function","onDragEnd","onDrag","e","current_slider_id","this","fixE","y","top","bottom","x","lastMouseX","clientX","lastMouseY","clientY","minMouseX","maxMouseX","minMouseY","maxMouseY","document","onmousemove","drag","onmouseup","end","update_style_array","apply_style","panel","get_style_value","gx","css","show","color","rgb","get_rgb_obj","cp","colorPicker","nx","ny","ey","ex","Math","max","min","event","layerX","offsetX","layerY","offsetY","skylark","langx","browser","noder","eventer","finder","$","colors","Color","ui","Widget","ColorPicker","fn","draggable","ele","getElementById","attr","gradX","Gradienter","_options","add_event","element","event_function","attachEvent","call","addEventListener","options","targets","sliders","direction","type","code_shown","change","styles","rand_RGB","rand_pos","slider_ids","slider_index","shape","slider_hovered","jQ_present","load_jQ","el","evt","evt_func","get_random_position","pos","random","indexOf","get_random_rgb","R","G","B","update_target","values","j","len","v_len","value","html","apply_default_styles","offset","position","container_width","sort","A","style_str","suffix","r","g","b","load_info","set_colorpicker","console","log","add_slider","slider","k","delta","append","containment","axis","click","clr","move","rgba","toRgbString","hide","flat","showAlpha","clickoutFiresChange","showInput","showButtons","generate_options","name","state","str","replace","generate_radial_options","generate_linear_options","destroy","load_gradx","me","gradient_size_val","option_str","container","remove","splice","focus","$this","select","mouseup","unbind","val","h","v","center","text","mixin","main"],"mappings":"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","file":"../skylark-ui-gradienter.js","sourcesContent":["define('skylark-ui-gradienter/Drag',[],function() {\n    /**************************************************\n     * dom-drag.js\n     * 09.25.2001\n     * www.youngpup.net\n     **************************************************\n     * 10.28.2001 - fixed minor bug where events\n     * sometimes fired off the handle, not the root.\n     **************************************************/\n\n    var Drag = {\n\n        obj : null,\n\n        gradx : null,\n\n        init : function(o, oRoot, minX, maxX, minY, maxY, bSwapHorzRef, bSwapVertRef, fXMapper, fYMapper)\n        {\n            o.onmousedown\t= Drag.start;\n\n            o.hmode\t\t\t= bSwapHorzRef ? false : true ;\n            o.vmode\t\t\t= bSwapVertRef ? false : true ;\n\n            o.root = oRoot && oRoot != null ? oRoot : o ;\n\n            if (o.hmode  && isNaN(parseInt(o.root.style.left  ))) o.root.style.left   = \"0px\";\n           //if (o.vmode  && isNaN(parseInt(o.root.style.top   ))) o.root.style.top    = \"0px\";\n            if (!o.hmode && isNaN(parseInt(o.root.style.right ))) o.root.style.right  = \"0px\";\n           // if (!o.vmode && isNaN(parseInt(o.root.style.bottom))) o.root.style.bottom = \"0px\";\n\n            o.minX\t= typeof minX != 'undefined' ? minX : null;\n            o.minY\t= typeof minY != 'undefined' ? minY : null;\n            o.maxX\t= typeof maxX != 'undefined' ? maxX : null;\n            o.maxY\t= typeof maxY != 'undefined' ? maxY : null;\n\n            o.xMapper = fXMapper ? fXMapper : null;\n            o.yMapper = fYMapper ? fYMapper : null;\n\n            o.root.onDragStart\t= new Function();\n            o.root.onDragEnd\t= new Function();\n            o.root.onDrag\t\t= new Function();\n        },\n\n        start : function(e)\n        {\n            Drag.gradx.current_slider_id = \"#\"+this.id;\n\n            var o = Drag.obj = this;\n            e = Drag.fixE(e);\n            var y = parseInt(o.vmode ? o.root.style.top  : o.root.style.bottom);\n            var x = parseInt(o.hmode ? o.root.style.left : o.root.style.right );\n            o.root.onDragStart(x, y);\n\n            o.lastMouseX\t= e.clientX;\n            o.lastMouseY\t= e.clientY;\n\n            if (o.hmode) {\n                if (o.minX != null)\to.minMouseX\t= e.clientX - x + o.minX;\n                if (o.maxX != null)\to.maxMouseX\t= o.minMouseX + o.maxX - o.minX;\n            } else {\n                if (o.minX != null) o.maxMouseX = -o.minX + e.clientX + x;\n                if (o.maxX != null) o.minMouseX = -o.maxX + e.clientX + x;\n            }\n\n            if (o.vmode) {\n                if (o.minY != null)\to.minMouseY\t= e.clientY - y + o.minY;\n                if (o.maxY != null)\to.maxMouseY\t= o.minMouseY + o.maxY - o.minY;\n            }\n            else {\n                if (o.minY != null) o.maxMouseY = -o.minY + e.clientY + y;\n                if (o.maxY != null) o.minMouseY = -o.maxY + e.clientY + y;\n            }\n\n            document.onmousemove\t= Drag.drag;\n            document.onmouseup\t= Drag.end;\n\n            return false;\n        },\n\n        drag : function(e)\n        {\n            e = Drag.fixE(e);\n            var o = Drag.obj;\n\n            Drag.gradx.update_style_array();\n            Drag.gradx.apply_style(Drag.gradx.panel, Drag.gradx.get_style_value());\n            var left = Drag.gradx.gx(\"#\"+o.id).css(\"left\");\n\n\n            if(parseInt(left) > 60 && parseInt(left) < 390) {\n                Drag.gradx.gx(\"#gradx_slider_info\") //info element cached before\n                .css(\"left\",left)\n                .show();\n                         \n            }/*else {\n                if(parseInt(left) > 120) {\n                    left = \"272px\";\n                }else{\n                    left = \"120px\";\n                }\n                    \n                gradx.gx(\"#gradx_slider_info\") //info element cached before\n                .css(\"left\",left)\n                .show();\n                     \n            }*/\n             var color = Drag.gradx.gx(\"#\"+o.id).css(\"backgroundColor\");\n            //but what happens if @color is not in RGB ? :(\n            var rgb = Drag.gradx.get_rgb_obj(color);\n            Drag.gradx.cp.colorPicker(\"set\",rgb);\n\n\n            var ey\t= e.clientY;\n            var ex\t= e.clientX;\n            var y = parseInt(o.vmode ? o.root.style.top  : o.root.style.bottom);\n            var x = parseInt(o.hmode ? o.root.style.left : o.root.style.right );\n            var nx, ny;\n\n            if (o.minX != null) ex = o.hmode ? Math.max(ex, o.minMouseX) : Math.min(ex, o.maxMouseX);\n            if (o.maxX != null) ex = o.hmode ? Math.min(ex, o.maxMouseX) : Math.max(ex, o.minMouseX);\n            if (o.minY != null) ey = o.vmode ? Math.max(ey, o.minMouseY) : Math.min(ey, o.maxMouseY);\n            if (o.maxY != null) ey = o.vmode ? Math.min(ey, o.maxMouseY) : Math.max(ey, o.minMouseY);\n\n            nx = x + ((ex - o.lastMouseX) * (o.hmode ? 1 : -1));\n            ny = y + ((ey - o.lastMouseY) * (o.vmode ? 1 : -1));\n\n            if (o.xMapper)\t\tnx = o.xMapper(y)\n            else if (o.yMapper)\tny = o.yMapper(x)\n\n            Drag.obj.root.style[o.hmode ? \"left\" : \"right\"] = nx + \"px\";\n            //Drag.obj.root.style[o.vmode ? \"top\" : \"bottom\"] = ny + \"px\";\n            Drag.obj.lastMouseX\t= ex;\n            Drag.obj.lastMouseY\t= ey;\n\n            Drag.obj.root.onDrag(nx, ny);\n            return false;\n        },\n\n        end : function()\n        {\n            document.onmousemove = null;\n            document.onmouseup   = null;\n            Drag.obj.root.onDragEnd(\tparseInt(Drag.obj.root.style[Drag.obj.hmode ? \"left\" : \"right\"]), \n                parseInt(Drag.obj.root.style[Drag.obj.vmode ? \"top\" : \"bottom\"]));\n            Drag.obj = null;\n        },\n\n        fixE : function(e)\n        {\n            if (typeof e == 'undefined') e = window.event;\n            if (typeof e.layerX == 'undefined') e.layerX = e.offsetX;\n            if (typeof e.layerY == 'undefined') e.layerY = e.offsetY;\n            return e;\n        }\n    };\n\n    return Drag;\n});\ndefine('skylark-ui-gradienter/Gradienter',[\n   \"skylark-langx/skylark\",\n    \"skylark-langx/langx\",\n    \"skylark-utils/browser\",\n    \"skylark-utils/noder\",\n    \"skylark-utils/eventer\",\n    \"skylark-utils/finder\",\n    \"skylark-utils/query\",\n    \"skylark-utils-color/colors\",\n    \"skylark-utils-color/Color\",\n    \"skylark-ui-swt/ui\",\n    \"skylark-ui-swt/Widget\",\n    \"skylark-ui-colorpicker/ColorPicker\",\n    \"./Drag\"\n],function(skylark, langx, browser, noder, eventer,finder, $, colors, Color, ui, Widget,ColorPicker,Drag) {\n\n\n    /*\n     *\n     * SAMPLE USAGE DETAILS :\n     * \n     * sliders structure :\n     *\n     * [\n     *  {\n     *     color: \"COLOR\",\n     *     position: \"POSITION\" //0 to 100 without % symbol\n     *  },\n     *  {\n     *     ....\n     *     ....\n     *  },\n     *  ....\n     * ]\n     *\n     */\n\n    'use strict';\n\n    //make me jquery UI  independent\n    if (typeof $.fn.draggable === \"undefined\") {\n\n        $.fn.draggable = function() {\n            //console.log(this);\n            var ele = document.getElementById(this.attr(\"id\"));\n            ele.style.top = \"121px\";\n            Drag.init(ele, null, 26, 426, 86, 86);\n            return this;\n        };\n\n\n    }\n\n\n    var gradX = ui.Gradienter = function(id, _options) {\n\n\n        var options = {\n            targets: [], //[element selector] -> array\n            sliders: [],\n            direction: 'left',\n            //if linear left | top | right | bottom\n            //if radial left | center | right , top | center | bottom \n            type: 'linear', //linear | circle | ellipse\n            code_shown: false, //false | true\n            change: function(sliders, styles) {\n                //nothing to do here by default\n            }\n        },\n    \t\n        //make global\t\n        gradx = Drag.gradx = {\n            rand_RGB: [],\n            rand_pos: [],\n            id: null,\n            slider_ids: [],\n            slider_index: 0, //global index for sliders\n            sliders: [], //contains styles of each slider\n            direction: \"left\", //direction of gradient or position of centre in case of radial gradients\n            type: \"linear\", //linear or radial\n            shape: \"cover\", //radial gradient size\n            slider_hovered: [],\n            jQ_present: true,\n            code_shown: false,\n            load_jQ: function() {\n\n                //handle any library conflicts here\n                this.gx = $;\n            },\n            //very lazy to replace this by jQuery\n            add_event: function(el, evt, evt_func) {\n                add_event(el, evt, evt_func);\n            },\n            get_random_position: function() {\n                var pos;\n\n                do {\n                    pos = parseInt(Math.random() * 100);\n                }\n                while (this.rand_pos.indexOf(pos) > -1);\n\n                this.rand_pos.push(pos);\n                return pos;\n\n            },\n            get_random_rgb: function() {\n\n                var R, G, B, color;\n\n                do {\n                    R = parseInt(Math.random() * 255);\n                    G = parseInt(Math.random() * 255);\n                    B = parseInt(Math.random() * 255);\n\n                    color = \"rgb(\" + R + \", \" + G + \", \" + B + \")\";\n                }\n                while (this.rand_RGB.indexOf(color) > -1);\n\n                this.rand_RGB.push(color);\n                return color;\n\n            },\n            //if target element is specified the target's style (background) is updated\n            update_target: function(values) {\n\n                if (this.targets.length > 0) {\n                    //target elements exist\n\n                    var i, j, ele, len = this.targets.length, v_len = values.length;\n                    for (i = 0; i < len; i++) {\n                        ele = gradx.gx(this.targets[i]);\n\n                        for (j = 0; j < v_len; j++) {\n                            ele.css(\"background-image\", values[j]);\n                        }\n\n                    }\n                }\n            },\n            //apply styles on fly\n            apply_style: function(ele, value) {\n\n                var type = 'linear';\n\n                if (gradx.type != 'linear') {\n                    type = 'radial';\n                }\n\n                if (value.indexOf(this.direction) > -1) {\n                    //add cross-browser compatibility\n                    var values = [\n                        \"-webkit-\" + type + \"-gradient(\" + value + \")\",\n                        \"-moz-\" + type + \"-gradient(\" + value + \")\",\n                        \"-ms-\" + type + \"-gradient(\" + value + \")\",\n                        \"-o-\" + type + \"-gradient(\" + value + \")\",\n                        type + \"-gradient(\" + value + \")\"\n                    ];\n                } else {\n                    //normal color\n                    values = [value];\n                }\n\n\n\n                var len = values.length, css = '';\n\n                while (len > 0) {\n                    len--;\n                    ele.css(\"background\", values[len]);\n                    css += \"background: \" + values[len] + \";\\n\";\n                }\n\n                //call the userdefined change function\n                this.change(this.sliders, values);\n                this.update_target(values);\n\n\n                gradx.gx('#gradx_code').html(css);\n\n            },\n            //on load\n            apply_default_styles: function() {\n                this.update_style_array()\n                var value = this.get_style_value();\n                this.apply_style(this.panel, value);\n            },\n            //update the slider_values[] while dragging\n            update_style_array: function() {\n\n                this.sliders = [];\n\n                var len = gradx.slider_ids.length,\n                        i, offset, position, id;\n\n                for (i = 0; i < len; i++) {\n                    id = \"#\" + gradx.slider_ids[i];\n                    offset = parseInt(gradx.gx(id).css(\"left\"));\n                    position = parseInt((offset / gradx.container_width) * 100);\n                    position -= 6; //TODO: find why this is required\n                    gradx.sliders.push([gradx.gx(id).css(\"background-color\"), position]);\n\n                }\n\n                this.sliders.sort(function(A, B) {\n                    if (A[1] > B[1])\n                        return 1;\n                    else\n                        return -1;\n                });\n            },\n            //creates the complete css background value to later apply style\n            get_style_value: function() {\n\n                var len = gradx.slider_ids.length;\n\n                if (len === 1) {\n                    //since only one slider , so simple background\n\n                    style_str = this.sliders[0][0];\n                } else {\n                    var style_str = \"\", suffix = \"\";\n                    for (var i = 0; i < len; i++) {\n                        if (this.sliders[i][1] == \"\") {\n                            style_str += suffix + (this.sliders[i][0]);\n\n                        } else {\n                            if (this.sliders[i][1] > 100) {\n                                this.sliders[i][1] = 100;\n                            }\n                            style_str += suffix + (this.sliders[i][0] + \" \" + this.sliders[i][1] + \"%\");\n\n                        }\n                        suffix = \" , \"; //add , from next iteration\n                    }\n\n                    if (this.type == 'linear') {\n                        //direction, [color stoppers]\n                        style_str = this.direction + \" , \" + style_str; //add direction for gradient\n                    } else {\n                        //position, type size, [color stoppers]\n                        style_str = this.direction + \" , \" + this.type + \" \" + this.shape + \" , \" + style_str;\n                    }\n                }\n\n                return style_str;\n            },\n            //@input rgb string rgb(<red>,<green>,<blue>)\n            //@output rgb object of form { r: <red> , g: <green> , b : <blue>}\n            get_rgb_obj: function(rgb) {\n\n                //rgb(r,g,b)\n                rgb = rgb.split(\"(\");\n                //r,g,b)\n                rgb = rgb[1];\n                //r g b)\n                rgb = rgb.split(\",\");\n\n                return {\n                    r: parseInt(rgb[0]),\n                    g: parseInt(rgb[1]),\n                    b: parseInt(rgb[2])\n                };\n\n            },\n            load_info: function(ele) {\n                var id = \"#\" + ele.id;\n                this.current_slider_id = id;\n                //check if current clicked element is an slider\n                if (this.slider_ids.indexOf(ele.id) > -1) { //javascript does not has # in its id\n\n                    var color = gradx.gx(id).css(\"backgroundColor\");\n                    //but what happens if @color is not in RGB ? :(\n                    var rgb = this.get_rgb_obj(color);\n\n                    var left = gradx.gx(id).css(\"left\");\n                    if (parseInt(left) > 26 && parseInt(left) < 426) {\n                        gradx.gx(\"#gradx_slider_info\") //info element cached before\n                                .css(\"left\", left)\n                                .show();\n\n                    } \n                    \n                    this.set_colorpicker(rgb);\n                    console.log(rgb);\n                }\n\n            },\n            //add slider\n            add_slider: function(sliders) {\n\n\n                var id, slider, k, position, value, delta;\n\n\n                if (sliders.length === 0) {\n                    sliders = [//default sliders\n                        {\n                            color: gradx.get_random_rgb(),\n                            position: gradx.get_random_position() //x percent of gradient panel(400px)\n                        },\n                        {\n                            color: gradx.get_random_rgb(),\n                            position: gradx.get_random_position()\n                        }\n                    ];\n\n                }\n\n\n                var obj = sliders;\n\n                for (k in obj) {\n\n                    if (typeof obj[k].position === \"undefined\")\n                        break;\n\n                    //convert % to px based on containers width\n                    var delta = 26; //range: 26px tp 426px\n                    position = parseInt((obj[k].position * this.container_width) / 100) + delta + \"px\";\n\n                    id = \"gradx_slider_\" + (this.slider_index); //create an id for this slider\n                    this.sliders.push(\n                            [\n                                obj[k].color,\n                                obj[k].position\n                            ]\n                            );\n\n                    this.slider_ids.push(id); //for reference wrt to id\n\n                    slider = \"<div class='gradx_slider' id='\" + id + \"'></div>\";\n                    gradx.gx(\"#gradx_start_sliders_\" + this.id).append(slider);\n\n                    gradx.gx('#' + id).css(\"backgroundColor\", obj[k].color).css(\"left\", position);\n                    this.slider_index++;\n                }\n\n                for (var i = 0, len = this.slider_ids.length; i < len; i++) {\n\n                    gradx.gx('#' + this.slider_ids[i]).draggable({\n                        containment: 'parent',\n                        axis: 'x',\n                        start: function() {\n                            if (gradx.jQ_present)\n                                gradx.current_slider_id = \"#\" + gradx.gx(this).attr(\"id\"); //got full jQuery power here !\n                        },\n                        drag: function() {\n\n                            gradx.update_style_array();\n                            gradx.apply_style(gradx.panel, gradx.get_style_value());\n                            var left = gradx.gx(gradx.current_slider_id).css(\"left\");\n\n\n                            if (parseInt(left) > 26 && parseInt(left) < 426) {\n                                gradx.gx(\"#gradx_slider_info\") //info element cached before\n                                        .css(\"left\", left)\n                                        .show();\n\n                            } /*else {\n                             if (parseInt(left) > 120) {\n                             left = \"272px\";\n                             } else {\n                             left = \"120px\";\n                             }\n                             \n                             gradx.gx(\"#gradx_slider_info\") //info element cached before\n                             .css(\"left\", left)\n                             .show();\n                             \n                             }*/\n                            var color = gradx.gx(gradx.current_slider_id).css(\"backgroundColor\");\n                            //but what happens if @color is not in RGB ? :(\n                            var rgb = gradx.get_rgb_obj(color);\n                            gradx.cp.colorPicker(\"set\", rgb);\n\n                        }\n\n                    }).click(function() {\n                        gradx.load_info(this);\n                        return false;\n                    });\n                }\n\n\n            },\n            set_colorpicker: function(clr) {\n                gradx.cp.colorPicker({\n                    move: function(color) {\n                        if (gradx.current_slider_id != false) {\n                            var rgba = color.toRgbString();\n                            gradx.gx(gradx.current_slider_id).css('background-color', rgba);\n                            gradx.update_style_array();\n                            gradx.apply_style(gradx.panel, gradx.get_style_value());\n                        }\n                    },\n                    change: function() {\n                        gradx.gx(\"#gradx_slider_info\").hide();\n                    },\n                    flat: true,\n                    showAlpha: true,\n                    color: clr,\n                    clickoutFiresChange: true,\n                    showInput: true,\n                    showButtons: false\n\n                });\n            },\n            generate_options: function(options) {\n\n                var len = options.length,\n                        name, state,\n                        str = '';\n\n                for (var i = 0; i < len; i++) {\n\n                    name = options[i].split(\" \");\n\n                    name = name[0];\n\n                    if (i < 2) {\n                        state = name[1];\n                    } else {\n                        state = '';\n                    }\n\n                    name = name.replace(\"-\", \" \");\n\n                    str += '<option value=' + options[i] + ' ' + state + '>' + name + '</option>';\n\n                }\n\n                return str;\n            },\n            generate_radial_options: function() {\n\n                var options;\n                options = [\"horizontal-center disabled\", \"center selected\", \"left\", \"right\"];\n                gradx.gx('#gradx_gradient_subtype').html(gradx.generate_options(options));\n\n                options = [\"vertical-center disabled\", \"center selected\", \"top\", \"bottom\"];\n                gradx.gx('#gradx_gradient_subtype2').html(gradx.generate_options(options)).show();\n\n            },\n            generate_linear_options: function() {\n\n                var options;\n                options = [\"horizontal-center disabled\", \"left selected\", \"right\", \"top\", \"bottom\"];\n                gradx.gx('#gradx_gradient_subtype').html(gradx.generate_options(options));\n\n                gradx.gx('#gradx_gradient_subtype2').hide();\n\n            },\n            destroy: function() {\n                var options = {\n                    targets: [], //[element selector] -> array\n                    sliders: [],\n                    direction: 'left',\n                    //if linear left | top | right | bottom\n                    //if radial left | center | right , top | center | bottom \n                    type: 'linear', //linear | circle | ellipse\n                    code_shown: false, //false | true\n                    change: function(sliders, styles) {\n                        //nothing to do here by default\n                    }\n                };\n\n                for (var k in options) {\n                    gradx[k] = options[k];\n                }\n            },\n            load_gradx: function(id, sliders) {\n                this.me = gradx.gx(id);\n                this.id = id.replace(\"#\", \"\");\n                id = this.id;\n                this.current_slider_id = false;\n                var html = \"<div class='gradx'>\\n\\\n                            <div id='gradx_add_slider' class='gradx_add_slider gradx_btn'><i class='icon icon-add'></i>add</div>\\n\\\n                            <div class='gradx_slectboxes'>\\n\\\n                            <select id='gradx_gradient_type' class='gradx_gradient_type'>\\n\\\n                                <option value='linear'>Linear</option>\\n\\\n                                <option value='circle'>Radial - Circle</option>\\n\\\n                                <option value='ellipse'>Radial - Ellipse</option>\\n\\\n                            </select>\\n\\\n                            <select id='gradx_gradient_subtype' class='gradx_gradient_type'>\\n\\\n                                <option id='gradx_gradient_subtype_desc' value='gradient-direction' disabled>gradient direction</option>\\n\\\n                                <option value='left' selected>Left</option>\\n\\\n                                <option value='right'>Right</option>\\n\\\n                                <option value='top'>Top</option>\\n\\\n                                <option value='bottom'>Bottom</option>\\n\\\n                            </select>\\n\\\n                            <select id='gradx_gradient_subtype2' class='gradx_gradient_type gradx_hide'>\\n\\\n                            </select>\\n\\\n                            <select id='gradx_radial_gradient_size' class='gradx_gradient_type gradx_hide'>\\n\\\n                            </select>\\n\\\n                            </div>\\n\\\n                            <div class='gradx_container' id='gradx_\" + id + \"'>\\n\\\n                                <div id='gradx_stop_sliders_\" + id + \"'></div>\\n\\\n                                <div class='gradx_panel' id='gradx_panel_\" + id + \"'></div>\\n\\\n                                <div class='gradx_start_sliders' id='gradx_start_sliders_\" + id + \"'>\\n\\\n                                    <div class='cp-default' id='gradx_slider_info'>\\n\\\n                                        <div id='gradx_slider_controls'>\\n\\\n                                            <div id='gradx_delete_slider' class='gradx_btn'><i class='icon icon-remove'></i>delete</div>\\n\\\n                                        </div>\\n\\\n                                        <div id='gradx_slider_content'></div>\\n\\\n                                    </div> \\n\\\n                                </div>\\n\\\n                            </div>\\n\\\n                            <div id='gradx_show_code' class='gradx_show_code gradx_btn'><i class='icon icon-file-css'></i><span>show the code</span></div>\\n\\\n                            <div id='gradx_show_presets' style='display:none' class='gradx_show_presets gradx_btn'><i class='icon icon-preset'></i><span>show presets</span></div>\\n\\\n                            <textarea class='gradx_code' id='gradx_code'></textarea>\\n\\\n                        </div>\";\n\n                this.me.html(html);\n\n\n                //generates html to select the different gradient sizes\n                // *only available for radial gradients\n                var gradient_size_val = [\"gradient-size disabled\", \"closest-side selected\", \"closest-corner\", \"farthest-side\", \"farthest-corner\", \"contain\", \"cover\"],\n                        option_str = '';\n\n\n                option_str = gradx.generate_options(gradient_size_val);\n\n                gradx.gx('#gradx_radial_gradient_size').html(option_str);\n\n\n                //cache divs for fast reference\n\n                this.container = gradx.gx(\"#gradx_\" + id);\n                this.panel = gradx.gx(\"#gradx_panel_\" + id);\n                //.hide();\n                //this.info.hide();\n                this.container_width = 400 //HARDCODE;\n                this.add_slider(sliders);\n\n\n                gradx.add_event(document, 'click', function() {\n    //            if(!gradx.jQ_present){\n                    if (!gradx.slider_hovered[id]) {\n                        gradx.gx(\"#gradx_slider_info\").hide();\n                        return false;\n                    }\n                });\n\n\n\n                gradx.gx('#gradx_add_slider').click(function() {\n                    gradx.add_slider([\n                        {\n                            color: gradx.get_random_rgb(),\n                            position: gradx.get_random_position() //no % symbol\n                        }\n                    ]);\n                    gradx.update_style_array();\n                    gradx.apply_style(gradx.panel, gradx.get_style_value());//(where,style)\n\n                });\n\n                //cache the element\n                gradx.cp = gradx.gx('#gradx_slider_content');\n\n                //call the colorpicker plugin\n                gradx.set_colorpicker(\"blue\");\n\n                gradx.gx('#gradx_delete_slider').click(function() {\n                    gradx.gx(gradx.current_slider_id).remove();\n                    gradx.gx(\"#gradx_slider_info\").hide();\n                    var id = gradx.current_slider_id.replace(\"#\", \"\");\n\n                    //remove all references from array for current deleted slider\n\n                    for (var i = 0; i < gradx.slider_ids.length; i++) {\n                        if (gradx.slider_ids[i] == id) {\n                            gradx.slider_ids.splice(i, 1);\n                        }\n                    }\n\n                    //apply modified style after removing the slider\n                    gradx.update_style_array();\n                    gradx.apply_style(gradx.panel, gradx.get_style_value());\n\n                    gradx.current_slider_id = false; //no slider is selected\n\n                });\n\n                gradx.gx('#gradx_code').focus(function() {\n                    var $this = gradx.gx(this);\n                    $this.select();\n\n                    // Work around Chrome's little problem\n                    $this.mouseup(function() {\n                        // Prevent further mouseup intervention\n                        $this.unbind(\"mouseup\");\n                        return false;\n                    });\n                });\n\n                gradx.gx('#gradx_gradient_type').change(function() {\n\n                    var type = gradx.gx(this).val(), options, option_str = '';\n\n                    if (type !== \"linear\") {\n                        //gradx.gx('#gradx_radial_gradient_size').show();\n\n                        gradx.generate_radial_options();\n                    } else {\n\n                        gradx.generate_linear_options();\n                        gradx.gx('#gradx_gradient_subtype').val(\"left\");\n                    }\n\n                    gradx.type = type;\n                    gradx.direction = gradx.gx('#gradx_gradient_subtype').val();\n                    gradx.apply_style(gradx.panel, gradx.get_style_value());//(where,style)\n                });\n\n                //change type onload userdefined\n                if (this.type !== \"linear\") {\n                    gradx.gx('#gradx_gradient_type').val(this.type);\n                    gradx.generate_radial_options();\n\n                    var h, v;\n\n                    if (this.direction !== 'left') {\n                        //user has passed his own direction\n                        var center;\n                        if (this.direction.indexOf(\",\") > -1) {\n                            center = this.direction.split(\",\");\n                        } else {\n                            //tolerate user mistakes\n                            center = this.direction.split(\" \");\n                        }\n\n                        h = center[0];\n                        v = center[1];\n\n                        //update the center points in the corr. select boxes\n                        gradx.gx('#gradx_gradient_subtype').val(h);\n                        gradx.gx('#gradx_gradient_subtype2').val(v);\n                    } else {\n                        var h = gradx.gx('#gradx_gradient_subtype').val();\n                        var v = gradx.gx('#gradx_gradient_subtype2').val();\n                    }\n\n                    gradx.direction = h + \" \" + v;\n                    gradx.apply_style(gradx.panel, gradx.get_style_value());//(where,style)\n                } else {\n\n                    //change direction if not left\n                    if (this.direction !== 'left') {\n                        gradx.gx('#gradx_gradient_subtype').val(this.direction);\n                    }\n                }\n\n                gradx.gx('#gradx_gradient_subtype').change(function() {\n\n                    if (gradx.type === 'linear') {\n                        gradx.direction = gradx.gx(this).val();\n                    } else {\n                        var h = gradx.gx(this).val();\n                        var v = gradx.gx('#gradx_gradient_subtype2').val();\n                        gradx.direction = h + \" \" + v;\n                    }\n                    gradx.apply_style(gradx.panel, gradx.get_style_value());//(where,style)\n\n                });\n\n                gradx.gx('#gradx_gradient_subtype2').change(function() {\n\n                    var h = gradx.gx('#gradx_gradient_subtype').val();\n                    var v = gradx.gx(this).val();\n                    gradx.direction = h + \" \" + v;\n                    gradx.apply_style(gradx.panel, gradx.get_style_value());//(where,style)\n\n                });\n\n                //not visible\n                gradx.gx('#gradx_radial_gradient_size').change(function() {\n                    gradx.shape = gradx.gx(this).val();\n                    gradx.apply_style(gradx.panel, gradx.get_style_value());//(where,style)\n\n                });\n\n                gradx.gx('#gradx_show_code').click(function() {\n\n                    if (gradx.code_shown) {\n                        //hide it\n\n                        gradx.code_shown = false;\n                        gradx.gx('#gradx_show_code span').text(\"show the code\");\n                        gradx.gx(\"#gradx_code\").hide();\n                    }\n                    else {\n                        //show it\n\n                        gradx.gx('#gradx_show_code span').text(\"hide the code\");\n                        gradx.gx(\"#gradx_code\").show();\n                        gradx.code_shown = true;\n                    }\n                });\n\n                //show or hide onload\n                if (gradx.code_shown) {\n                    //show it\n\n                    gradx.gx('#gradx_show_code span').text(\"hide the code\");\n                    gradx.gx(\"#gradx_code\").show();\n\n                }\n\n                gradx.add_event(document.getElementById('gradx_slider_info'), 'mouseout', function() {\n                    gradx.slider_hovered[id] = false;\n                });\n                gradx.add_event(document.getElementById('gradx_slider_info'), 'mouseover', function() {\n                    gradx.slider_hovered[id] = true;\n\n                });\n\n            }\n\n\n\n\n        };\n\n\n\n        function  add_event(element, event, event_function)\n        {\n            if (element.attachEvent) //Internet Explorer\n                element.attachEvent(\"on\" + event, function() {\n                    event_function.call(element);\n                });\n            else if (element.addEventListener) //Firefox & company\n                element.addEventListener(event, event_function, false); //don't need the 'call' trick because in FF everything already works in the right way\n        }\n        ;\n\n\n\n        //load jQuery library into gradx.gx\n        gradx.load_jQ();\n\n\n        /* merge _options into options */\n        langx.mixin(options, _options);\n\n        //apply options to gradx object\n\n        for (var k in options) {\n\n            //load the options into gradx object\n            gradx[k] = options[k];\n\n        }\n\n        gradx.load_gradx(id, gradx.sliders);\n        gradx.apply_default_styles();\n\n\n    };\n\n    return gradX;\n});\ndefine('skylark-ui-gradienter/main',[\r\n    \"./Gradienter\",\r\n], function(Gradienter) {\r\n    return Gradienter;\r\n});\r\n\ndefine('skylark-ui-gradienter', ['skylark-ui-gradienter/main'], function (main) { return main; });\n\n"]}