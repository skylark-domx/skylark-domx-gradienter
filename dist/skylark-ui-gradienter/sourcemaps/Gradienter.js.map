{"version":3,"sources":["Gradienter.js"],"names":["define","skylark","langx","browser","noder","eventer","finder","$","colors","Color","ui","Widget","ColorPicker","Drag","fn","draggable","ele","document","getElementById","this","attr","style","top","init","gradX","Gradienter","id","_options","add_event","element","event","event_function","attachEvent","call","addEventListener","options","targets","sliders","direction","type","code_shown","change","styles","gradx","rand_RGB","rand_pos","slider_ids","slider_index","shape","slider_hovered","jQ_present","load_jQ","gx","el","evt","evt_func","get_random_position","pos","parseInt","Math","random","indexOf","push","get_random_rgb","R","G","B","color","update_target","values","length","i","j","len","v_len","css","apply_style","value","html","apply_default_styles","update_style_array","get_style_value","panel","offset","position","container_width","sort","A","style_str","suffix","get_rgb_obj","rgb","split","r","g","b","load_info","current_slider_id","left","show","set_colorpicker","console","log","add_slider","slider","k","delta","obj","append","containment","axis","start","drag","cp","colorPicker","click","clr","move","rgba","toRgbString","hide","flat","showAlpha","clickoutFiresChange","showInput","showButtons","generate_options","name","state","str","replace","generate_radial_options","generate_linear_options","destroy","load_gradx","me","gradient_size_val","option_str","container","remove","splice","focus","$this","select","mouseup","unbind","val","h","v","center","text","mixin"],"mappings":"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","file":"../Gradienter.js","sourcesContent":["define([\r\n   \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-utils/browser\",\r\n    \"skylark-utils/noder\",\r\n    \"skylark-utils/eventer\",\r\n    \"skylark-utils/finder\",\r\n    \"skylark-utils/query\",\r\n    \"skylark-utils-color/colors\",\r\n    \"skylark-utils-color/Color\",\r\n    \"skylark-ui-swt/ui\",\r\n    \"skylark-ui-swt/Widget\",\r\n    \"skylark-ui-colorpicker/ColorPicker\",\r\n    \"./Drag\"\r\n],function(skylark, langx, browser, noder, eventer,finder, $, colors, Color, ui, Widget,ColorPicker,Drag) {\r\n\r\n\r\n    /*\r\n     *\r\n     * SAMPLE USAGE DETAILS :\r\n     * \r\n     * sliders structure :\r\n     *\r\n     * [\r\n     *  {\r\n     *     color: \"COLOR\",\r\n     *     position: \"POSITION\" //0 to 100 without % symbol\r\n     *  },\r\n     *  {\r\n     *     ....\r\n     *     ....\r\n     *  },\r\n     *  ....\r\n     * ]\r\n     *\r\n     */\r\n\r\n    'use strict';\r\n\r\n    //make me jquery UI  independent\r\n    if (typeof $.fn.draggable === \"undefined\") {\r\n\r\n        $.fn.draggable = function() {\r\n            //console.log(this);\r\n            var ele = document.getElementById(this.attr(\"id\"));\r\n            ele.style.top = \"121px\";\r\n            Drag.init(ele, null, 26, 426, 86, 86);\r\n            return this;\r\n        };\r\n\r\n\r\n    }\r\n\r\n\r\n    var gradX = ui.Gradienter = function(id, _options) {\r\n\r\n\r\n        var options = {\r\n            targets: [], //[element selector] -> array\r\n            sliders: [],\r\n            direction: 'left',\r\n            //if linear left | top | right | bottom\r\n            //if radial left | center | right , top | center | bottom \r\n            type: 'linear', //linear | circle | ellipse\r\n            code_shown: false, //false | true\r\n            change: function(sliders, styles) {\r\n                //nothing to do here by default\r\n            }\r\n        },\r\n    \t\r\n        //make global\t\r\n        gradx = Drag.gradx = {\r\n            rand_RGB: [],\r\n            rand_pos: [],\r\n            id: null,\r\n            slider_ids: [],\r\n            slider_index: 0, //global index for sliders\r\n            sliders: [], //contains styles of each slider\r\n            direction: \"left\", //direction of gradient or position of centre in case of radial gradients\r\n            type: \"linear\", //linear or radial\r\n            shape: \"cover\", //radial gradient size\r\n            slider_hovered: [],\r\n            jQ_present: true,\r\n            code_shown: false,\r\n            load_jQ: function() {\r\n\r\n                //handle any library conflicts here\r\n                this.gx = $;\r\n            },\r\n            //very lazy to replace this by jQuery\r\n            add_event: function(el, evt, evt_func) {\r\n                add_event(el, evt, evt_func);\r\n            },\r\n            get_random_position: function() {\r\n                var pos;\r\n\r\n                do {\r\n                    pos = parseInt(Math.random() * 100);\r\n                }\r\n                while (this.rand_pos.indexOf(pos) > -1);\r\n\r\n                this.rand_pos.push(pos);\r\n                return pos;\r\n\r\n            },\r\n            get_random_rgb: function() {\r\n\r\n                var R, G, B, color;\r\n\r\n                do {\r\n                    R = parseInt(Math.random() * 255);\r\n                    G = parseInt(Math.random() * 255);\r\n                    B = parseInt(Math.random() * 255);\r\n\r\n                    color = \"rgb(\" + R + \", \" + G + \", \" + B + \")\";\r\n                }\r\n                while (this.rand_RGB.indexOf(color) > -1);\r\n\r\n                this.rand_RGB.push(color);\r\n                return color;\r\n\r\n            },\r\n            //if target element is specified the target's style (background) is updated\r\n            update_target: function(values) {\r\n\r\n                if (this.targets.length > 0) {\r\n                    //target elements exist\r\n\r\n                    var i, j, ele, len = this.targets.length, v_len = values.length;\r\n                    for (i = 0; i < len; i++) {\r\n                        ele = gradx.gx(this.targets[i]);\r\n\r\n                        for (j = 0; j < v_len; j++) {\r\n                            ele.css(\"background-image\", values[j]);\r\n                        }\r\n\r\n                    }\r\n                }\r\n            },\r\n            //apply styles on fly\r\n            apply_style: function(ele, value) {\r\n\r\n                var type = 'linear';\r\n\r\n                if (gradx.type != 'linear') {\r\n                    type = 'radial';\r\n                }\r\n\r\n                if (value.indexOf(this.direction) > -1) {\r\n                    //add cross-browser compatibility\r\n                    var values = [\r\n                        \"-webkit-\" + type + \"-gradient(\" + value + \")\",\r\n                        \"-moz-\" + type + \"-gradient(\" + value + \")\",\r\n                        \"-ms-\" + type + \"-gradient(\" + value + \")\",\r\n                        \"-o-\" + type + \"-gradient(\" + value + \")\",\r\n                        type + \"-gradient(\" + value + \")\"\r\n                    ];\r\n                } else {\r\n                    //normal color\r\n                    values = [value];\r\n                }\r\n\r\n\r\n\r\n                var len = values.length, css = '';\r\n\r\n                while (len > 0) {\r\n                    len--;\r\n                    ele.css(\"background\", values[len]);\r\n                    css += \"background: \" + values[len] + \";\\n\";\r\n                }\r\n\r\n                //call the userdefined change function\r\n                this.change(this.sliders, values);\r\n                this.update_target(values);\r\n\r\n\r\n                gradx.gx('#gradx_code').html(css);\r\n\r\n            },\r\n            //on load\r\n            apply_default_styles: function() {\r\n                this.update_style_array()\r\n                var value = this.get_style_value();\r\n                this.apply_style(this.panel, value);\r\n            },\r\n            //update the slider_values[] while dragging\r\n            update_style_array: function() {\r\n\r\n                this.sliders = [];\r\n\r\n                var len = gradx.slider_ids.length,\r\n                        i, offset, position, id;\r\n\r\n                for (i = 0; i < len; i++) {\r\n                    id = \"#\" + gradx.slider_ids[i];\r\n                    offset = parseInt(gradx.gx(id).css(\"left\"));\r\n                    position = parseInt((offset / gradx.container_width) * 100);\r\n                    position -= 6; //TODO: find why this is required\r\n                    gradx.sliders.push([gradx.gx(id).css(\"background-color\"), position]);\r\n\r\n                }\r\n\r\n                this.sliders.sort(function(A, B) {\r\n                    if (A[1] > B[1])\r\n                        return 1;\r\n                    else\r\n                        return -1;\r\n                });\r\n            },\r\n            //creates the complete css background value to later apply style\r\n            get_style_value: function() {\r\n\r\n                var len = gradx.slider_ids.length;\r\n\r\n                if (len === 1) {\r\n                    //since only one slider , so simple background\r\n\r\n                    style_str = this.sliders[0][0];\r\n                } else {\r\n                    var style_str = \"\", suffix = \"\";\r\n                    for (var i = 0; i < len; i++) {\r\n                        if (this.sliders[i][1] == \"\") {\r\n                            style_str += suffix + (this.sliders[i][0]);\r\n\r\n                        } else {\r\n                            if (this.sliders[i][1] > 100) {\r\n                                this.sliders[i][1] = 100;\r\n                            }\r\n                            style_str += suffix + (this.sliders[i][0] + \" \" + this.sliders[i][1] + \"%\");\r\n\r\n                        }\r\n                        suffix = \" , \"; //add , from next iteration\r\n                    }\r\n\r\n                    if (this.type == 'linear') {\r\n                        //direction, [color stoppers]\r\n                        style_str = this.direction + \" , \" + style_str; //add direction for gradient\r\n                    } else {\r\n                        //position, type size, [color stoppers]\r\n                        style_str = this.direction + \" , \" + this.type + \" \" + this.shape + \" , \" + style_str;\r\n                    }\r\n                }\r\n\r\n                return style_str;\r\n            },\r\n            //@input rgb string rgb(<red>,<green>,<blue>)\r\n            //@output rgb object of form { r: <red> , g: <green> , b : <blue>}\r\n            get_rgb_obj: function(rgb) {\r\n\r\n                //rgb(r,g,b)\r\n                rgb = rgb.split(\"(\");\r\n                //r,g,b)\r\n                rgb = rgb[1];\r\n                //r g b)\r\n                rgb = rgb.split(\",\");\r\n\r\n                return {\r\n                    r: parseInt(rgb[0]),\r\n                    g: parseInt(rgb[1]),\r\n                    b: parseInt(rgb[2])\r\n                };\r\n\r\n            },\r\n            load_info: function(ele) {\r\n                var id = \"#\" + ele.id;\r\n                this.current_slider_id = id;\r\n                //check if current clicked element is an slider\r\n                if (this.slider_ids.indexOf(ele.id) > -1) { //javascript does not has # in its id\r\n\r\n                    var color = gradx.gx(id).css(\"backgroundColor\");\r\n                    //but what happens if @color is not in RGB ? :(\r\n                    var rgb = this.get_rgb_obj(color);\r\n\r\n                    var left = gradx.gx(id).css(\"left\");\r\n                    if (parseInt(left) > 26 && parseInt(left) < 426) {\r\n                        gradx.gx(\"#gradx_slider_info\") //info element cached before\r\n                                .css(\"left\", left)\r\n                                .show();\r\n\r\n                    } \r\n                    \r\n                    this.set_colorpicker(rgb);\r\n                    console.log(rgb);\r\n                }\r\n\r\n            },\r\n            //add slider\r\n            add_slider: function(sliders) {\r\n\r\n\r\n                var id, slider, k, position, value, delta;\r\n\r\n\r\n                if (sliders.length === 0) {\r\n                    sliders = [//default sliders\r\n                        {\r\n                            color: gradx.get_random_rgb(),\r\n                            position: gradx.get_random_position() //x percent of gradient panel(400px)\r\n                        },\r\n                        {\r\n                            color: gradx.get_random_rgb(),\r\n                            position: gradx.get_random_position()\r\n                        }\r\n                    ];\r\n\r\n                }\r\n\r\n\r\n                var obj = sliders;\r\n\r\n                for (k in obj) {\r\n\r\n                    if (typeof obj[k].position === \"undefined\")\r\n                        break;\r\n\r\n                    //convert % to px based on containers width\r\n                    var delta = 26; //range: 26px tp 426px\r\n                    position = parseInt((obj[k].position * this.container_width) / 100) + delta + \"px\";\r\n\r\n                    id = \"gradx_slider_\" + (this.slider_index); //create an id for this slider\r\n                    this.sliders.push(\r\n                            [\r\n                                obj[k].color,\r\n                                obj[k].position\r\n                            ]\r\n                            );\r\n\r\n                    this.slider_ids.push(id); //for reference wrt to id\r\n\r\n                    slider = \"<div class='gradx_slider' id='\" + id + \"'></div>\";\r\n                    gradx.gx(\"#gradx_start_sliders_\" + this.id).append(slider);\r\n\r\n                    gradx.gx('#' + id).css(\"backgroundColor\", obj[k].color).css(\"left\", position);\r\n                    this.slider_index++;\r\n                }\r\n\r\n                for (var i = 0, len = this.slider_ids.length; i < len; i++) {\r\n\r\n                    gradx.gx('#' + this.slider_ids[i]).draggable({\r\n                        containment: 'parent',\r\n                        axis: 'x',\r\n                        start: function() {\r\n                            if (gradx.jQ_present)\r\n                                gradx.current_slider_id = \"#\" + gradx.gx(this).attr(\"id\"); //got full jQuery power here !\r\n                        },\r\n                        drag: function() {\r\n\r\n                            gradx.update_style_array();\r\n                            gradx.apply_style(gradx.panel, gradx.get_style_value());\r\n                            var left = gradx.gx(gradx.current_slider_id).css(\"left\");\r\n\r\n\r\n                            if (parseInt(left) > 26 && parseInt(left) < 426) {\r\n                                gradx.gx(\"#gradx_slider_info\") //info element cached before\r\n                                        .css(\"left\", left)\r\n                                        .show();\r\n\r\n                            } /*else {\r\n                             if (parseInt(left) > 120) {\r\n                             left = \"272px\";\r\n                             } else {\r\n                             left = \"120px\";\r\n                             }\r\n                             \r\n                             gradx.gx(\"#gradx_slider_info\") //info element cached before\r\n                             .css(\"left\", left)\r\n                             .show();\r\n                             \r\n                             }*/\r\n                            var color = gradx.gx(gradx.current_slider_id).css(\"backgroundColor\");\r\n                            //but what happens if @color is not in RGB ? :(\r\n                            var rgb = gradx.get_rgb_obj(color);\r\n                            gradx.cp.colorPicker(\"set\", rgb);\r\n\r\n                        }\r\n\r\n                    }).click(function() {\r\n                        gradx.load_info(this);\r\n                        return false;\r\n                    });\r\n                }\r\n\r\n\r\n            },\r\n            set_colorpicker: function(clr) {\r\n                gradx.cp.colorPicker({\r\n                    move: function(color) {\r\n                        if (gradx.current_slider_id != false) {\r\n                            var rgba = color.toRgbString();\r\n                            gradx.gx(gradx.current_slider_id).css('background-color', rgba);\r\n                            gradx.update_style_array();\r\n                            gradx.apply_style(gradx.panel, gradx.get_style_value());\r\n                        }\r\n                    },\r\n                    change: function() {\r\n                        gradx.gx(\"#gradx_slider_info\").hide();\r\n                    },\r\n                    flat: true,\r\n                    showAlpha: true,\r\n                    color: clr,\r\n                    clickoutFiresChange: true,\r\n                    showInput: true,\r\n                    showButtons: false\r\n\r\n                });\r\n            },\r\n            generate_options: function(options) {\r\n\r\n                var len = options.length,\r\n                        name, state,\r\n                        str = '';\r\n\r\n                for (var i = 0; i < len; i++) {\r\n\r\n                    name = options[i].split(\" \");\r\n\r\n                    name = name[0];\r\n\r\n                    if (i < 2) {\r\n                        state = name[1];\r\n                    } else {\r\n                        state = '';\r\n                    }\r\n\r\n                    name = name.replace(\"-\", \" \");\r\n\r\n                    str += '<option value=' + options[i] + ' ' + state + '>' + name + '</option>';\r\n\r\n                }\r\n\r\n                return str;\r\n            },\r\n            generate_radial_options: function() {\r\n\r\n                var options;\r\n                options = [\"horizontal-center disabled\", \"center selected\", \"left\", \"right\"];\r\n                gradx.gx('#gradx_gradient_subtype').html(gradx.generate_options(options));\r\n\r\n                options = [\"vertical-center disabled\", \"center selected\", \"top\", \"bottom\"];\r\n                gradx.gx('#gradx_gradient_subtype2').html(gradx.generate_options(options)).show();\r\n\r\n            },\r\n            generate_linear_options: function() {\r\n\r\n                var options;\r\n                options = [\"horizontal-center disabled\", \"left selected\", \"right\", \"top\", \"bottom\"];\r\n                gradx.gx('#gradx_gradient_subtype').html(gradx.generate_options(options));\r\n\r\n                gradx.gx('#gradx_gradient_subtype2').hide();\r\n\r\n            },\r\n            destroy: function() {\r\n                var options = {\r\n                    targets: [], //[element selector] -> array\r\n                    sliders: [],\r\n                    direction: 'left',\r\n                    //if linear left | top | right | bottom\r\n                    //if radial left | center | right , top | center | bottom \r\n                    type: 'linear', //linear | circle | ellipse\r\n                    code_shown: false, //false | true\r\n                    change: function(sliders, styles) {\r\n                        //nothing to do here by default\r\n                    }\r\n                };\r\n\r\n                for (var k in options) {\r\n                    gradx[k] = options[k];\r\n                }\r\n            },\r\n            load_gradx: function(id, sliders) {\r\n                this.me = gradx.gx(id);\r\n                this.id = id.replace(\"#\", \"\");\r\n                id = this.id;\r\n                this.current_slider_id = false;\r\n                var html = \"<div class='gradx'>\\n\\\r\n                            <div id='gradx_add_slider' class='gradx_add_slider gradx_btn'><i class='icon icon-add'></i>add</div>\\n\\\r\n                            <div class='gradx_slectboxes'>\\n\\\r\n                            <select id='gradx_gradient_type' class='gradx_gradient_type'>\\n\\\r\n                                <option value='linear'>Linear</option>\\n\\\r\n                                <option value='circle'>Radial - Circle</option>\\n\\\r\n                                <option value='ellipse'>Radial - Ellipse</option>\\n\\\r\n                            </select>\\n\\\r\n                            <select id='gradx_gradient_subtype' class='gradx_gradient_type'>\\n\\\r\n                                <option id='gradx_gradient_subtype_desc' value='gradient-direction' disabled>gradient direction</option>\\n\\\r\n                                <option value='left' selected>Left</option>\\n\\\r\n                                <option value='right'>Right</option>\\n\\\r\n                                <option value='top'>Top</option>\\n\\\r\n                                <option value='bottom'>Bottom</option>\\n\\\r\n                            </select>\\n\\\r\n                            <select id='gradx_gradient_subtype2' class='gradx_gradient_type gradx_hide'>\\n\\\r\n                            </select>\\n\\\r\n                            <select id='gradx_radial_gradient_size' class='gradx_gradient_type gradx_hide'>\\n\\\r\n                            </select>\\n\\\r\n                            </div>\\n\\\r\n                            <div class='gradx_container' id='gradx_\" + id + \"'>\\n\\\r\n                                <div id='gradx_stop_sliders_\" + id + \"'></div>\\n\\\r\n                                <div class='gradx_panel' id='gradx_panel_\" + id + \"'></div>\\n\\\r\n                                <div class='gradx_start_sliders' id='gradx_start_sliders_\" + id + \"'>\\n\\\r\n                                    <div class='cp-default' id='gradx_slider_info'>\\n\\\r\n                                        <div id='gradx_slider_controls'>\\n\\\r\n                                            <div id='gradx_delete_slider' class='gradx_btn'><i class='icon icon-remove'></i>delete</div>\\n\\\r\n                                        </div>\\n\\\r\n                                        <div id='gradx_slider_content'></div>\\n\\\r\n                                    </div> \\n\\\r\n                                </div>\\n\\\r\n                            </div>\\n\\\r\n                            <div id='gradx_show_code' class='gradx_show_code gradx_btn'><i class='icon icon-file-css'></i><span>show the code</span></div>\\n\\\r\n                            <div id='gradx_show_presets' style='display:none' class='gradx_show_presets gradx_btn'><i class='icon icon-preset'></i><span>show presets</span></div>\\n\\\r\n                            <textarea class='gradx_code' id='gradx_code'></textarea>\\n\\\r\n                        </div>\";\r\n\r\n                this.me.html(html);\r\n\r\n\r\n                //generates html to select the different gradient sizes\r\n                // *only available for radial gradients\r\n                var gradient_size_val = [\"gradient-size disabled\", \"closest-side selected\", \"closest-corner\", \"farthest-side\", \"farthest-corner\", \"contain\", \"cover\"],\r\n                        option_str = '';\r\n\r\n\r\n                option_str = gradx.generate_options(gradient_size_val);\r\n\r\n                gradx.gx('#gradx_radial_gradient_size').html(option_str);\r\n\r\n\r\n                //cache divs for fast reference\r\n\r\n                this.container = gradx.gx(\"#gradx_\" + id);\r\n                this.panel = gradx.gx(\"#gradx_panel_\" + id);\r\n                //.hide();\r\n                //this.info.hide();\r\n                this.container_width = 400 //HARDCODE;\r\n                this.add_slider(sliders);\r\n\r\n\r\n                gradx.add_event(document, 'click', function() {\r\n    //            if(!gradx.jQ_present){\r\n                    if (!gradx.slider_hovered[id]) {\r\n                        gradx.gx(\"#gradx_slider_info\").hide();\r\n                        return false;\r\n                    }\r\n                });\r\n\r\n\r\n\r\n                gradx.gx('#gradx_add_slider').click(function() {\r\n                    gradx.add_slider([\r\n                        {\r\n                            color: gradx.get_random_rgb(),\r\n                            position: gradx.get_random_position() //no % symbol\r\n                        }\r\n                    ]);\r\n                    gradx.update_style_array();\r\n                    gradx.apply_style(gradx.panel, gradx.get_style_value());//(where,style)\r\n\r\n                });\r\n\r\n                //cache the element\r\n                gradx.cp = gradx.gx('#gradx_slider_content');\r\n\r\n                //call the colorpicker plugin\r\n                gradx.set_colorpicker(\"blue\");\r\n\r\n                gradx.gx('#gradx_delete_slider').click(function() {\r\n                    gradx.gx(gradx.current_slider_id).remove();\r\n                    gradx.gx(\"#gradx_slider_info\").hide();\r\n                    var id = gradx.current_slider_id.replace(\"#\", \"\");\r\n\r\n                    //remove all references from array for current deleted slider\r\n\r\n                    for (var i = 0; i < gradx.slider_ids.length; i++) {\r\n                        if (gradx.slider_ids[i] == id) {\r\n                            gradx.slider_ids.splice(i, 1);\r\n                        }\r\n                    }\r\n\r\n                    //apply modified style after removing the slider\r\n                    gradx.update_style_array();\r\n                    gradx.apply_style(gradx.panel, gradx.get_style_value());\r\n\r\n                    gradx.current_slider_id = false; //no slider is selected\r\n\r\n                });\r\n\r\n                gradx.gx('#gradx_code').focus(function() {\r\n                    var $this = gradx.gx(this);\r\n                    $this.select();\r\n\r\n                    // Work around Chrome's little problem\r\n                    $this.mouseup(function() {\r\n                        // Prevent further mouseup intervention\r\n                        $this.unbind(\"mouseup\");\r\n                        return false;\r\n                    });\r\n                });\r\n\r\n                gradx.gx('#gradx_gradient_type').change(function() {\r\n\r\n                    var type = gradx.gx(this).val(), options, option_str = '';\r\n\r\n                    if (type !== \"linear\") {\r\n                        //gradx.gx('#gradx_radial_gradient_size').show();\r\n\r\n                        gradx.generate_radial_options();\r\n                    } else {\r\n\r\n                        gradx.generate_linear_options();\r\n                        gradx.gx('#gradx_gradient_subtype').val(\"left\");\r\n                    }\r\n\r\n                    gradx.type = type;\r\n                    gradx.direction = gradx.gx('#gradx_gradient_subtype').val();\r\n                    gradx.apply_style(gradx.panel, gradx.get_style_value());//(where,style)\r\n                });\r\n\r\n                //change type onload userdefined\r\n                if (this.type !== \"linear\") {\r\n                    gradx.gx('#gradx_gradient_type').val(this.type);\r\n                    gradx.generate_radial_options();\r\n\r\n                    var h, v;\r\n\r\n                    if (this.direction !== 'left') {\r\n                        //user has passed his own direction\r\n                        var center;\r\n                        if (this.direction.indexOf(\",\") > -1) {\r\n                            center = this.direction.split(\",\");\r\n                        } else {\r\n                            //tolerate user mistakes\r\n                            center = this.direction.split(\" \");\r\n                        }\r\n\r\n                        h = center[0];\r\n                        v = center[1];\r\n\r\n                        //update the center points in the corr. select boxes\r\n                        gradx.gx('#gradx_gradient_subtype').val(h);\r\n                        gradx.gx('#gradx_gradient_subtype2').val(v);\r\n                    } else {\r\n                        var h = gradx.gx('#gradx_gradient_subtype').val();\r\n                        var v = gradx.gx('#gradx_gradient_subtype2').val();\r\n                    }\r\n\r\n                    gradx.direction = h + \" \" + v;\r\n                    gradx.apply_style(gradx.panel, gradx.get_style_value());//(where,style)\r\n                } else {\r\n\r\n                    //change direction if not left\r\n                    if (this.direction !== 'left') {\r\n                        gradx.gx('#gradx_gradient_subtype').val(this.direction);\r\n                    }\r\n                }\r\n\r\n                gradx.gx('#gradx_gradient_subtype').change(function() {\r\n\r\n                    if (gradx.type === 'linear') {\r\n                        gradx.direction = gradx.gx(this).val();\r\n                    } else {\r\n                        var h = gradx.gx(this).val();\r\n                        var v = gradx.gx('#gradx_gradient_subtype2').val();\r\n                        gradx.direction = h + \" \" + v;\r\n                    }\r\n                    gradx.apply_style(gradx.panel, gradx.get_style_value());//(where,style)\r\n\r\n                });\r\n\r\n                gradx.gx('#gradx_gradient_subtype2').change(function() {\r\n\r\n                    var h = gradx.gx('#gradx_gradient_subtype').val();\r\n                    var v = gradx.gx(this).val();\r\n                    gradx.direction = h + \" \" + v;\r\n                    gradx.apply_style(gradx.panel, gradx.get_style_value());//(where,style)\r\n\r\n                });\r\n\r\n                //not visible\r\n                gradx.gx('#gradx_radial_gradient_size').change(function() {\r\n                    gradx.shape = gradx.gx(this).val();\r\n                    gradx.apply_style(gradx.panel, gradx.get_style_value());//(where,style)\r\n\r\n                });\r\n\r\n                gradx.gx('#gradx_show_code').click(function() {\r\n\r\n                    if (gradx.code_shown) {\r\n                        //hide it\r\n\r\n                        gradx.code_shown = false;\r\n                        gradx.gx('#gradx_show_code span').text(\"show the code\");\r\n                        gradx.gx(\"#gradx_code\").hide();\r\n                    }\r\n                    else {\r\n                        //show it\r\n\r\n                        gradx.gx('#gradx_show_code span').text(\"hide the code\");\r\n                        gradx.gx(\"#gradx_code\").show();\r\n                        gradx.code_shown = true;\r\n                    }\r\n                });\r\n\r\n                //show or hide onload\r\n                if (gradx.code_shown) {\r\n                    //show it\r\n\r\n                    gradx.gx('#gradx_show_code span').text(\"hide the code\");\r\n                    gradx.gx(\"#gradx_code\").show();\r\n\r\n                }\r\n\r\n                gradx.add_event(document.getElementById('gradx_slider_info'), 'mouseout', function() {\r\n                    gradx.slider_hovered[id] = false;\r\n                });\r\n                gradx.add_event(document.getElementById('gradx_slider_info'), 'mouseover', function() {\r\n                    gradx.slider_hovered[id] = true;\r\n\r\n                });\r\n\r\n            }\r\n\r\n\r\n\r\n\r\n        };\r\n\r\n\r\n\r\n        function  add_event(element, event, event_function)\r\n        {\r\n            if (element.attachEvent) //Internet Explorer\r\n                element.attachEvent(\"on\" + event, function() {\r\n                    event_function.call(element);\r\n                });\r\n            else if (element.addEventListener) //Firefox & company\r\n                element.addEventListener(event, event_function, false); //don't need the 'call' trick because in FF everything already works in the right way\r\n        }\r\n        ;\r\n\r\n\r\n\r\n        //load jQuery library into gradx.gx\r\n        gradx.load_jQ();\r\n\r\n\r\n        /* merge _options into options */\r\n        langx.mixin(options, _options);\r\n\r\n        //apply options to gradx object\r\n\r\n        for (var k in options) {\r\n\r\n            //load the options into gradx object\r\n            gradx[k] = options[k];\r\n\r\n        }\r\n\r\n        gradx.load_gradx(id, gradx.sliders);\r\n        gradx.apply_default_styles();\r\n\r\n\r\n    };\r\n\r\n    return gradX;\r\n});"]}